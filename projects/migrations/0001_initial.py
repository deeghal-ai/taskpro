# Generated by Django 5.1.4 on 2025-01-10 06:56

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("locations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the product", max_length=255, unique=True
                    ),
                ),
                (
                    "expected_tat",
                    models.PositiveIntegerField(
                        help_text="Default expected turnaround time in days for this product",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this product is available for new projects",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductSubcategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the subcategory", max_length=100, unique=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this subcategory is available for new projects",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product Subcategory",
                "verbose_name_plural": "Product Subcategories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProjectStatusOption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the status (e.g., 'Sales Confirmation')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "category_one",
                    models.CharField(
                        help_text="First level categorization (e.g., 'Awaiting Data')",
                        max_length=100,
                    ),
                ),
                (
                    "category_two",
                    models.CharField(
                        help_text="Second level categorization (e.g., 'Not Started')",
                        max_length=100,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="Sequence number for ordering statuses"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this status is currently available for use",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Project Status Option",
                "verbose_name_plural": "Project Status Options",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "opportunity_id",
                    models.CharField(
                        help_text="Unique identifier for the project opportunity",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "project_type",
                    models.CharField(
                        choices=[("EVENT", "Event"), ("NON_EVENT", "Non-Event")],
                        help_text="Whether this is an event-based or non-event project",
                        max_length=10,
                    ),
                ),
                (
                    "project_name",
                    models.CharField(help_text="Name of the project", max_length=255),
                ),
                (
                    "builder_name",
                    models.CharField(
                        help_text="Name of the builder/client", max_length=255
                    ),
                ),
                (
                    "package_id",
                    models.CharField(
                        blank=True,
                        help_text="Optional package identifier",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        help_text="Quantity of products for this project"
                    ),
                ),
                (
                    "purchase_date",
                    models.DateField(help_text="Date when the project was purchased"),
                ),
                (
                    "sales_confirmation_date",
                    models.DateField(
                        help_text="Date when sales confirmation was received"
                    ),
                ),
                (
                    "expected_tat",
                    models.PositiveIntegerField(
                        help_text="Expected turnaround time in days (defaults to product TAT but can be overridden)",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "account_manager",
                    models.CharField(
                        help_text="Name of the account manager responsible for this project",
                        max_length=255,
                    ),
                ),
                (
                    "tl_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Rating given by Team Leader (0-5)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "city",
                    models.ForeignKey(
                        help_text="City where this project is located",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="projects",
                        to="locations.city",
                    ),
                ),
                (
                    "dpm",
                    models.ForeignKey(
                        help_text="The Digital Project Manager assigned to this project",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dpm_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="The product being delivered in this project",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="projects",
                        to="projects.product",
                    ),
                ),
                (
                    "product_subcategory",
                    models.ForeignKey(
                        help_text="Subcategory classification for this project",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="projects",
                        to="projects.productsubcategory",
                    ),
                ),
                (
                    "team_leader",
                    models.ForeignKey(
                        blank=True,
                        help_text="The Team Leader assigned to this project",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tl_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_status",
                    models.ForeignKey(
                        help_text="Current status of the project",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="projects",
                        to="projects.projectstatusoption",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectStatusHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category_one_snapshot",
                    models.CharField(
                        help_text="Category one value when this status was set",
                        max_length=100,
                    ),
                ),
                (
                    "category_two_snapshot",
                    models.CharField(
                        help_text="Category two value when this status was set",
                        max_length=100,
                    ),
                ),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="Optional comments about why the status was changed",
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        help_text="The DPM who made this status change",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="status_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="The project whose status changed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="projects.project",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        help_text="The status that was set",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="projects.projectstatusoption",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Status History",
                "verbose_name_plural": "Project Status Histories",
                "ordering": ["-changed_at"],
            },
        ),
    ]
