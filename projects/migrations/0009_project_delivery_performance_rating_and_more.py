# Generated by Django 5.1.4 on 2025-01-28 09:45

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0008_alter_hs_id_non_nullable"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="project",
            name="delivery_performance_rating",
            field=models.DecimalField(
                blank=True,
                decimal_places=1,
                help_text="Delivery performance rating given by TL (1-5)",
                max_digits=2,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(5),
                ],
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="expected_completion_date",
            field=models.DateField(
                blank=True,
                help_text="Expected date of project completion set by TL",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="project_incharge",
            field=models.ForeignKey(
                blank=True,
                help_text="Team member assigned as project incharge",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="tl_assigned_projects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ProductTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the task", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of what this task involves",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this task is available for new projects",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        help_text="The product this task belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="available_tasks",
                        to="projects.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Task",
                "verbose_name_plural": "Product Tasks",
                "ordering": ["product", "name"],
                "unique_together": {("product", "name")},
            },
        ),
        migrations.CreateModel(
            name="QualityLabel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="The quality label (e.g., Q1, C1)", max_length=50
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this quality label means",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this label is available for use",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        help_text="The product this quality label belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_labels",
                        to="projects.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quality Label",
                "verbose_name_plural": "Quality Labels",
                "ordering": ["product", "label"],
                "unique_together": {("product", "label")},
            },
        ),
        migrations.CreateModel(
            name="ProjectTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        editable=False,
                        help_text="Unique task identifier (e.g., TID_00001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[("NEW", "New"), ("REWORK", "Rework")],
                        help_text="Whether this is a new task or rework",
                        max_length=10,
                    ),
                ),
                (
                    "estimated_time",
                    models.PositiveIntegerField(
                        help_text="Estimated time for task completion (in hours)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Team Leader who created this task",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product_task",
                    models.ForeignKey(
                        help_text="The type of task from product's task list",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="project_tasks",
                        to="projects.producttask",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="The project this task belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="projects.project",
                    ),
                ),
                (
                    "quality_label",
                    models.ForeignKey(
                        blank=True,
                        help_text="Quality label assigned to this task",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tasks",
                        to="projects.qualitylabel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Task",
                "verbose_name_plural": "Project Tasks",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "assignment_id",
                    models.CharField(
                        editable=False,
                        help_text="Unique assignment identifier (e.g., ASID_001216)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "assigned_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this assignment was created"
                    ),
                ),
                (
                    "projected_hours",
                    models.PositiveIntegerField(
                        help_text="Estimated hours needed for this assignment"
                    ),
                ),
                (
                    "sub_task",
                    models.TextField(
                        help_text="Description of the specific part of the task assigned"
                    ),
                ),
                (
                    "rework_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NEW", "New"),
                            ("INTERNAL_REWORK", "Internal Rework"),
                        ],
                        help_text="Type of rework if applicable",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this assignment is visible in team member's dashboard",
                    ),
                ),
                (
                    "error_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of errors found in this assignment"
                    ),
                ),
                (
                    "error_description",
                    models.TextField(
                        blank=True, help_text="Description of errors if any"
                    ),
                ),
                (
                    "expected_delivery_date",
                    models.DateTimeField(
                        help_text="When this assignment is expected to be completed"
                    ),
                ),
                (
                    "quality_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Quality rating for this assignment (1-5)",
                        max_digits=2,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        help_text="Team Leader who created this assignment",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        help_text="Team member assigned to this task",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="task_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        help_text="The task being assigned",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="projects.projecttask",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task Assignment",
                "verbose_name_plural": "Task Assignments",
                "ordering": ["-assigned_date"],
            },
        ),
    ]
